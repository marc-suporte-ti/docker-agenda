<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DockerAgenda</name>
    </assembly>
    <members>
        <member name="T:DockerAgenda.Controllers.AgendasController">
            <summary>
            Controller responsável por gerenciar contatos de uma agenda
            </summary>
        </member>
        <member name="F:DockerAgenda.Controllers.AgendasController._agendaService">
            <summary>
            Instância do serviço da api
            </summary>
        </member>
        <member name="M:DockerAgenda.Controllers.AgendasController.#ctor(DockerAgenda.Interfaces.IAgendaService)">
            <summary>
            Construtor da controller responsável por gerenciar contatos de uma agenda
            </summary>
            <param name="agendaService">Instância do serviço da api</param>
        </member>
        <member name="M:DockerAgenda.Controllers.AgendasController.PostAgenda(DockerAgenda.Dto.AgendaRequestDto)">
            <summary>
            Responsável por criar a agenda para o novo usuário
            </summary>
            <param name="agendaRequestDto">Dados para registro da agenda</param>
            <returns>Agenda criada</returns>
        </member>
        <member name="M:DockerAgenda.Controllers.AgendasController.GetAgenda(System.Guid)">
            <summary>
            Consulta agenda pelo id
            </summary>
            <param name="id">Id do registro da agenda</param>
            <returns>Informações da agenda consultada</returns>
        </member>
        <member name="M:DockerAgenda.Controllers.AgendasController.PostContato(System.Guid,DockerAgenda.Dto.ContatoRequestDto)">
            <summary>
            Cria o contato na agenda informada
            </summary>
            <param name="id">Id da agenda criada</param>
            <param name="contatoRequestDto">Dados do contato para cadastro</param>
            <returns>Contato criado na agenda</returns>
        </member>
        <member name="M:DockerAgenda.Controllers.AgendasController.GetContato(System.Guid,System.Guid)">
            <summary>
            Consulta contato pelo id do contato e id da agenda
            </summary>
            <param name="id">Id da agenda onde o contato foi cadastrado</param>
            <param name="idContato">Id do contato para consulta</param>
            <returns>Contato encontrado</returns>
        </member>
        <member name="M:DockerAgenda.Controllers.AgendasController.PostItemContato(System.Guid,System.Guid,DockerAgenda.Dto.ItemContatoRequestDto)">
            <summary>
            Inclusão de item no contato
            </summary>
            <param name="id">Id da agenda onde o contato foi cadastrado</param>
            <param name="idContato">Id do contato para consulta</param>
            <param name="itemContatoRequestDto">Dados do item para inclusão no contato</param>
            <returns>Item incluído no contato</returns>
        </member>
        <member name="T:DockerAgenda.Data.DockerAgendaContext">
            <summary>
            Contexto da aplicação
            </summary>
        </member>
        <member name="M:DockerAgenda.Data.DockerAgendaContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{DockerAgenda.Data.DockerAgendaContext})">
            <summary>
            Construtor do contexto da aplicação
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:DockerAgenda.Data.DockerAgendaContext.Agendas">
            <summary>
            Tabela de agendas
            </summary>
        </member>
        <member name="P:DockerAgenda.Data.DockerAgendaContext.Contatos">
            <summary>
            Tabela de contatos
            </summary>
        </member>
        <member name="P:DockerAgenda.Data.DockerAgendaContext.ItensContatos">
            <summary>
            Tabela de itens do contato
            </summary>
        </member>
        <member name="M:DockerAgenda.Data.DockerAgendaContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Configuração do contexto
            </summary>
            <param name="optionsBuilder"></param>
        </member>
        <member name="T:DockerAgenda.Dto.AgendaDto">
            <summary>
            Registro da agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.AgendaDto.Id">
            <summary>
            Id identificador da agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.AgendaDto.NomeResponsavel">
            <summary>
            Nome do responsável pela agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.AgendaDto.Contatos">
            <summary>
            Lista de contatos da agenda
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.AgendaRequestDto">
            <summary>
            Registro a intenção de cadastro de uma agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.AgendaRequestDto.NomeResponsavel">
            <summary>
            Nome do responsável pela agenda
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.ContatoDto">
            <summary>
            Registro do contato cadastrado na agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ContatoDto.Id">
            <summary>
            Id identificador do contato cadastrado
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ContatoDto.Nome">
            <summary>
            Nome do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ContatoDto.TipoContato">
            <summary>
            Relacionamento com este contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ContatoDto.ItensContato">
            <summary>
            Lista de contatos da agenda
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.ContatoRequestDto">
            <summary>
            Registro a intenção de cadastro de um contato em uma agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ContatoRequestDto.NomeContato">
            <summary>
            Nome do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ContatoRequestDto.TipoContato">
            <summary>
            Relacionamento com este contato
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.ItemContatoDto">
            <summary>
            Registro do item do contato de um agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoDto.Id">
            <summary>
            Id identificador da agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoDto.Registro">
            <summary>
            Dados para registrar do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoDto.Observacao">
            <summary>
            Observação do item do contato incluído
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoDto.TipoItemContato">
            <summary>
            Define o tipo do item do contato
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.ItemContatoRequestDto">
            <summary>
            Registro a intenção de cadastro de um item no contato de uma agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoRequestDto.Registro">
            <summary>
            Dados para registrar do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoRequestDto.Observacao">
            <summary>
            Observação do item do contato incluído
            </summary>
        </member>
        <member name="P:DockerAgenda.Dto.ItemContatoRequestDto.TipoItemContato">
            <summary>
            Define o tipo do item do contato
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.TipoContato">
            <summary>
            Define as possibilidades da classificação deste contato
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoContato.Parente">
            <summary>
            Quando contato é um parente
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoContato.Amigo">
            <summary>
            Quando contato é um amigo
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoContato.Colega">
            <summary>
            Quando contato é um colega
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoContato.Desconhecido">
            <summary>
            Quando contato é um desconhecido
            </summary>
        </member>
        <member name="T:DockerAgenda.Dto.TipoItemContato">
            <summary>
            Define as possibilidades da classificação deste contato
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoItemContato.Telefone">
            <summary>
            Quando tipo do contato é um telefone
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoItemContato.Email">
            <summary>
            Quando tipo do contato é um email
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoItemContato.Fax">
            <summary>
            Quando tipo do contato é um fax
            </summary>
        </member>
        <member name="F:DockerAgenda.Dto.TipoItemContato.Outros">
            <summary>
            Quando tipo do contato é um outros
            </summary>
        </member>
        <member name="T:DockerAgenda.Entity.AgendaEntity">
            <summary>
            Registro da agenda cadastrada
            </summary>
        </member>
        <member name="M:DockerAgenda.Entity.AgendaEntity.#ctor">
            <summary>
            Construtor do registro da agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.AgendaEntity.Id">
            <summary>
            Id identificador da agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.AgendaEntity.NomeResponsavel">
            <summary>
            Nome do responsável pela agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.AgendaEntity.Contatos">
            <summary>
            Lista de contatos da agenda
            </summary>
        </member>
        <member name="T:DockerAgenda.Entity.ContatoEntity">
            <summary>
            Registro do contato cadastrado na agenda
            </summary>
        </member>
        <member name="M:DockerAgenda.Entity.ContatoEntity.#ctor">
            <summary>
            Construtor do registro contato cadastrado na agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ContatoEntity.Id">
            <summary>
            Id identificador do contato cadastrado
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ContatoEntity.Nome">
            <summary>
            Nome do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ContatoEntity.TipoContato">
            <summary>
            Relacionamento com este contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ContatoEntity.ItensContato">
            <summary>
            Lista de itens do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ContatoEntity.AgendaId">
            <summary>
            Referência para o ID da agenda
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ContatoEntity.Agenda">
            <summary>
            Propriedade de nagaveção para a agenda
            </summary>
        </member>
        <member name="T:DockerAgenda.Entity.ItemContatoEntity">
            <summary>
            Registro do item do contato de um agenda cadastrada
            </summary>
        </member>
        <member name="M:DockerAgenda.Entity.ItemContatoEntity.#ctor">
            <summary>
            Construtor do registro do item do contato de um agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ItemContatoEntity.Id">
            <summary>
            Id identificador da agenda cadastrada
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ItemContatoEntity.Registro">
            <summary>
            Dados para registrar do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ItemContatoEntity.Observacao">
            <summary>
            Observação do item do contato incluído
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ItemContatoEntity.TipoItemContato">
            <summary>
            Define o tipo do item do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ItemContatoEntity.ContatoEntityId">
            <summary>
            Referência para o ID do contato
            </summary>
        </member>
        <member name="P:DockerAgenda.Entity.ItemContatoEntity.Contato">
            <summary>
            Propriedade de nagaveção para o contato
            </summary>
        </member>
        <member name="T:DockerAgenda.Entity.TipoContato">
            <summary>
            Define as possibilidades da classificação deste contato
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoContato.Parente">
            <summary>
            Quando contato é um parente
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoContato.Amigo">
            <summary>
            Quando contato é um amigo
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoContato.Colega">
            <summary>
            Quando contato é um colega
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoContato.Desconhecido">
            <summary>
            Quando contato é um desconhecido
            </summary>
        </member>
        <member name="T:DockerAgenda.Entity.TipoItemContato">
            <summary>
            Define as possibilidades da classificação deste contato
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoItemContato.Telefone">
            <summary>
            Quando tipo do contato é um telefone
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoItemContato.Email">
            <summary>
            Quando tipo do contato é um email
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoItemContato.Fax">
            <summary>
            Quando tipo do contato é um fax
            </summary>
        </member>
        <member name="F:DockerAgenda.Entity.TipoItemContato.Outros">
            <summary>
            Quando tipo do contato é um outros
            </summary>
        </member>
        <member name="T:DockerAgenda.Filters.EnumSchemaFilter">
            <summary>
            Aplicar filtro de enum
            </summary>
        </member>
        <member name="M:DockerAgenda.Filters.EnumSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
            Aplicar filtro
            </summary>
            <param name="schema">Schema</param>
            <param name="context">Contexto</param>
        </member>
        <member name="T:DockerAgenda.Interfaces.IAgendaService">
            <summary>
            Interface responsável por gerar o contrato do serviços da agenda
            </summary>
        </member>
        <member name="M:DockerAgenda.Interfaces.IAgendaService.InserirAgendaAsync(DockerAgenda.Dto.AgendaRequestDto)">
            <summary>
            Insere novo item na agenda
            </summary>
            <param name="agendaRequestDto">Request com os dados para inclusão</param>
            <returns>Agenda cadastrada</returns>
        </member>
        <member name="M:DockerAgenda.Interfaces.IAgendaService.ConsultarAgendaAsync(System.Guid)">
            <summary>
            Pesquisa a agenda solicitada
            </summary>
            <param name="id">Id da agenda</param>
            <returns>Agenda encontrada</returns>
        </member>
        <member name="M:DockerAgenda.Interfaces.IAgendaService.InserirContatoAsync(System.Guid,DockerAgenda.Dto.ContatoRequestDto)">
            <summary>
            Insere contato na agenda informada
            </summary>
            <param name="idAgenda">Id da agenda para inclusão</param>
            <param name="contatoRequestDto">Dados do contato para inclusão</param>
            <returns>Contato cadastrado</returns>
        </member>
        <member name="M:DockerAgenda.Interfaces.IAgendaService.ConsultarContatoAsync(System.Guid,System.Guid)">
            <summary>
            Pesquisa o contato da agenda
            </summary>
            <param name="idAgenda">Id da agenda para pesquisa</param>
            <param name="idContato">Id do contato</param>
            <returns>Dados do contato pesquisado</returns>
        </member>
        <member name="M:DockerAgenda.Interfaces.IAgendaService.InserirItemContatoAsync(System.Guid,System.Guid,DockerAgenda.Dto.ItemContatoRequestDto)">
            <summary>
            Insere item no contato
            </summary>
            <param name="idAgenda">Id da agenda para validação</param>
            <param name="idContato">Id do contato para vallidação</param>
            <param name="itemContatoRequestDto">Dados do item do contato para inclusão</param>
            <returns>Item incluído no contato</returns>
        </member>
        <member name="T:DockerAgenda.Program">
            <summary>
            Classe de execução inicial
            </summary>
        </member>
        <member name="M:DockerAgenda.Program.Main(System.String[])">
            <summary>
            Metodo para start da aplicação
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:DockerAgenda.Program.CreateHostBuilder(System.String[])">
            <summary>
            Iniciando configuração inicial da aplicação
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:DockerAgenda.Service.AgendaService">
            <summary>
            Implementação do contrato responsável por gerar o contrato do serviços da agenda
            </summary>
        </member>
        <member name="F:DockerAgenda.Service.AgendaService._contexto">
            <summary>
            Contexto com DB
            </summary>
        </member>
        <member name="F:DockerAgenda.Service.AgendaService._mapper">
            <summary>
            Instância de mapper
            </summary>
        </member>
        <member name="M:DockerAgenda.Service.AgendaService.#ctor(DockerAgenda.Data.DockerAgendaContext,AutoMapper.IMapper)">
            <summary>
            Construtor da implementação do contrato responsável por gerar o contrato do serviços da agenda
            </summary>
            <param name="contexto">Contexto com DB</param>
            <param name="mapper">Instância de mapper</param>
        </member>
        <member name="M:DockerAgenda.Service.AgendaService.InserirAgendaAsync(DockerAgenda.Dto.AgendaRequestDto)">
            <summary>
            Insere novo item na agenda
            </summary>
            <param name="agendaRequestDto">Request com os dados para inclusão</param>
            <returns>Agenda cadastrada</returns>
        </member>
        <member name="M:DockerAgenda.Service.AgendaService.ConsultarAgendaAsync(System.Guid)">
            <summary>
            Pesquisa a agenda solicitada
            </summary>
            <param name="id">Id da agenda</param>
            <returns>Agenda encontrada</returns>
        </member>
        <member name="M:DockerAgenda.Service.AgendaService.InserirContatoAsync(System.Guid,DockerAgenda.Dto.ContatoRequestDto)">
            <summary>
            Insere contato na agenda informada
            </summary>
            <param name="idAgenda">Id da agenda para inclusão</param>
            <param name="contatoRequestDto">Dados do contato para inclusão</param>
            <returns>Contato cadastrado</returns>
        </member>
        <member name="M:DockerAgenda.Service.AgendaService.ConsultarContatoAsync(System.Guid,System.Guid)">
            <summary>
            Pesquisa o contato da agenda
            </summary>
            <param name="idAgenda">Id da agenda para pesquisa</param>
            <param name="idContato">Id do contato</param>
            <returns>Dados do contato pesquisado</returns>
        </member>
        <member name="M:DockerAgenda.Service.AgendaService.InserirItemContatoAsync(System.Guid,System.Guid,DockerAgenda.Dto.ItemContatoRequestDto)">
            <summary>
            Insere item no contato
            </summary>
            <param name="idAgenda">Id da agenda para validação</param>
            <param name="idContato">Id do contato para vallidação</param>
            <param name="itemContatoRequestDto">Dados do item do contato para inclusão</param>
            <returns>Item incluído no contato</returns>
        </member>
        <member name="T:DockerAgenda.Startup">
            <summary>
            Classe de inicialização da aplicação
            </summary>
        </member>
        <member name="M:DockerAgenda.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Construtor da classe de inicialização da aplicação
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:DockerAgenda.Startup.Configuration">
            <summary>
            Configuração da aplicação
            </summary>
        </member>
        <member name="M:DockerAgenda.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configuração do serviço
            </summary>
            <param name="services">Serviço de registro da aplicação</param>
        </member>
        <member name="M:DockerAgenda.Startup.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Gerar ServiceProvider
            </summary>
            <param name="services">Serviço de registro da aplicação</param>
            <returns>ServiceProvider</returns>
        </member>
        <member name="M:DockerAgenda.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configuração
            </summary>
            <param name="app">Instância para configuração do pipeline de uma solicitação</param>
            <param name="env">Instância para fornecer informações sobre o ambiente de execução</param>
        </member>
        <member name="M:DockerAgenda.Startup.MigracoesPendentes(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Validando se existe pacote não aplicado no banco
            </summary>
            <param name="app">Instância para configuração do pipeline de uma solicitação</param>
        </member>
    </members>
</doc>
